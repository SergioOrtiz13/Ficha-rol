<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ficha de Rol</title>
    <link rel="stylesheet" type="text/css" href="../public/ficha.css">
    <style>
        .dados {
            display: flex;
            justify-content: center;
            margin-top: 10px;
        }
        .dado {
            width: 50px;
            height: 50px;
            margin: 0 5px;
            background: url('img/dado.png') no-repeat center center;
            background-size: cover;
            animation: girar 1s infinite;
        }
        @keyframes girar {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <input type="hidden" id="ficha-id" value="<%= personaje._id %>">
    <% if (personaje.videoFondo && personaje.videoFondo.length > 0) { 
    const ext = personaje.videoFondo.split('.').pop().toLowerCase();
    if (ext === 'mp4' || ext === 'avi' || ext === 'mov' || ext === 'webm') { %>
        <!-- Si es un video -->
        <video class="video-background" autoplay muted loop>
            <source src="<%= personaje.videoFondo %>" type="video/mp4">
            Tu navegador no soporta el elemento de video.
        </video>
    <% } else if (ext === 'jpg' || ext === 'jpeg' || ext === 'png' || ext === 'gif') { %>
        <!-- Si es una imagen -->
        <img src="<%= personaje.videoFondo %>" alt="Fondo del personaje" class="video-background">
    <% } %>
<% } else { %>
    <p>No hay video o imagen de fondo disponible.</p>
<% } %>


    <div class="ficha">
        <div class="header">
    <div class="nombre-vida">
        <h1>Nombre del Personaje: <%= personaje.nombrePersonaje %></h1>
        <div class="vida-personaje">
            ❤️ <span id="vida-actual"><%= personaje.pv || 12 %></span> / <span id="vida-maxima"><%= personaje.pvMax || 12 %></span>
            <button id="vida-sumar">+</button>
            <button id="vida-restar">-</button>
        </div>
    </div>

    <% if (personaje.imagenPersonaje && personaje.imagenPersonaje.length > 0) { %>
        <img src="<%= personaje.imagenPersonaje %>" alt="Imagen de <%= personaje.nombrePersonaje %>" class="imagen-circular">
    <% } else { %>
        <p>No hay imagen disponible.</p>
    <% } %>

    <!-- Imagen por defecto -->
    <!-- Imagen por defecto -->
<img 
    src="<%= personaje.imagenPorDefecto && personaje.imagenPorDefecto.length > 0 ? personaje.imagenPorDefecto : '/img/default.jpg' %>" 
    alt="Personaje por defecto" 
    class="imagen-circular" 
    id="imagen-por-defecto" 
    style="cursor:pointer;">


<!-- Modal para seleccionar imagen -->
<div id="modal-galeria" style="
    display:none;
    position:fixed;
    top:0;
    left:0;
    width:100%;
    height:100%;
    background:rgba(0,0,0,0.7);
    justify-content:center;
    align-items:center;
    z-index:1000;
">
    <div style="
        background:#fff;
        padding:20px;
        border-radius:10px;
        max-width:80%;
        max-height:80%;
        overflow:auto;
        display:flex;
        flex-wrap:wrap;
        gap:10px;
        justify-content:center;
    " id="galeria-imagenes">
        <!-- Las imágenes se insertan dinámicamente aquí -->
    </div>
</div>



</div>


        
        <button onclick="tirarDadosJugador()">Tirar Dados</button>
            <div class="resultado-tirada">
                <div id="username"></div> <!-- Nombre de usuario -->
                <div id="resultado-dados">
        <!-- Aquí se mostrarán las tiradas previas -->
            </div>
            <!--<div id="resultado-dados">Resultado de tus dados</div>-->
        </div>
            <!--hay que mejorar esta parte la proxima vez-->
        <h2>Conquista</h2>
        <div class="caracteristica">
            <label>Carisma: <span id="carisma"><%= personaje.carisma || '0' %></span>*</label>
            <button id="carisma-sumar">+</button>
            <button id="carisma-restar">-</button>
        </div>
        
        
        <div class="caracteristica">
            <label>Economía: <span id="economia"><%= personaje.economia || '0' %></span>*</label>
            <button id="economia-sumar">+</button>
            <button id="economia-restar">-</button>
        </div>
        
        
        <div class="caracteristica">
            <label>Torpeza: <span id="torpeza"><%= personaje.torpeza || '0' %></span>*</label>
            <button id="torpeza-sumar">+</button>
            <button id="torpeza-restar">-</button>
        </div>
        
        
        <div class="caracteristica">
            <label>Belleza: <span id="belleza"><%= personaje.belleza || '0' %></span>*</label>
            <button id="belleza-sumar">+</button>
            <button id="belleza-restar">-</button>
        </div>
        
        
        <div class="caracteristica">
            <label>Social: <span id="social"><%= personaje.social || '0' %></span>*</label>
            <button id="social-sumar">+</button>
            <button id="social-restar">-</button>
        </div>
        
        
        
            <h2>Habilidades</h2>
        
            
<div class="caracteristica">
    <label>Inteligencia: <span id="habilidad-inteligencia"><%= personaje.habilidades.inteligencia || '0' %></span>*</label>
    <button id="habilidad-inteligencia-sumar">+</button>
    <button id="habilidad-inteligencia-restar">-</button>
</div>

<!-- Forma Física -->
<div class="caracteristica">
    <label>Forma Física: <span id="habilidad-forma-fisica"><%= personaje.habilidades.formaFisica || '0' %></span>*</label>
    <button id="habilidad-forma-fisica-sumar">+</button>
    <button id="habilidad-forma-fisica-restar">-</button>
</div>

<!-- Habilidad Zero -->
<div class="caracteristica">
    <label>Habilidad Zero: <span id="habilidad-zero"><%= personaje.habilidades.habilidadZero || '0' %></span>*</label>
    <button id="habilidad-zero-sumar">+</button>
    <button id="habilidad-zero-restar">-</button>
</div>

<!-- Sigilo -->
<div class="caracteristica">
    <label>Sigilo: <span id="habilidad-sigilo"><%= personaje.habilidades.sigilo || '0' %></span>*</label>
    <button id="habilidad-sigilo-sumar">+</button>
    <button id="habilidad-sigilo-restar">-</button>
</div>

<!-- Reflejos -->
<div class="caracteristica">
    <label>Reflejos: <span id="habilidad-reflejos"><%= personaje.habilidades.reflejos || '0' %></span>*</label>
    <button id="habilidad-reflejos-sumar">+</button>
    <button id="habilidad-reflejos-restar">-</button>
</div>

<!-- Combate -->
<div class="caracteristica">
    <label>Combate: <span id="habilidad-combate"><%= personaje.habilidades.combate || '0' %></span>*</label>
    <button id="habilidad-combate-sumar">+</button>
    <button id="habilidad-combate-restar">-</button>
</div>

<!-- Subterfugio -->
<div class="caracteristica">
    <label>Subterfugio: <span id="habilidad-subterfugio"><%= personaje.habilidades.subterfugio || '0' %></span>*</label>
    <button id="habilidad-subterfugio-sumar">+</button>
    <button id="habilidad-subterfugio-restar">-</button>
</div>

<!-- Percepción -->
<div class="caracteristica">
    <label>Percepción: <span id="habilidad-percepcion"><%= personaje.habilidades.percepcion || '0' %></span>*</label>
    <button id="habilidad-percepcion-sumar">+</button>
    <button id="habilidad-percepcion-restar">-</button>
</div>

<!-- Juego de Manos -->
<div class="caracteristica">
    <label>Juego de Manos: <span id="habilidad-juegoDeManos"><%= personaje.habilidades.juegoManos || '0' %></span>*</label>
    <button id="habilidad-juegoDeManos-sumar">+</button>
    <button id="habilidad-juegoDeManos-restar">-</button>
</div>

<div class="caracteristica">
    <label>Voluntad: <span id="habilidad-Voluntad"><%= personaje.habilidades.Voluntad || '0' %></span>*</label>
    <button id="habilidad-Voluntad-sumar">+</button>
    <button id="habilidad-Voluntad-restar">-</button>
</div>


        <!-- Historia -->
        <div class="historia">
            <h2>Historia</h2>
            <p><%= personaje.historia || 'Historia no disponible.' %></p>
        </div>

        <!-- Personalidad -->
        <div class="personalidad">
            <h2>Personalidad</h2>
            <p><%= personaje.personalidad || 'Personalidad no disponible.' %></p>
        </div>
            <h2>Corazones</h2>
            <div id="corazones-container" style="margin-top: 20px; display: flex; gap: 50px; font-family: Arial, sans-serif;">
            
  <div>
    <div>Crush</div>
    <!--imagen cursh-->
    <div id="corazones-crush" class="corazones" data-actual="<%= personaje.crush || 0 %>" data-tipo="crush"></div>
  </div>
  <div>
    <div>Arista</div>
    <!--imagen arista-->
    <div id="corazones-arista" class="corazones" data-actual="<%= personaje.aristas || 0 %>" data-tipo="aristas"></div>
  </div>
</div>



        <div class="habilidades">
            <h2>Datos</h2>
            <textarea id="habilidades-adquiridas" rows="4" placeholder="Se irán viendo durante la partida"><%= personaje.habilidadesAdquiridas || '' %></textarea>
            <button type="button" onclick="guardarHabilidades()">Guardar Habilidades</button>
        </div>

        <!-- Árbol Genealógico -->
        <div class="arbol-genealogico">
            <h2>Familiares y amigos</h2>
            <% if (personaje.miembrosArbol && personaje.miembrosArbol.length > 0) { %>
                <ul>
                    <% personaje.miembrosArbol.forEach(function(miembro) { %>
                        <li><%= miembro %></li>
                    <% }); %>
                </ul>
            <% } else { %>
                <p>No hay miembros en el árbol genealógico.</p>
            <% } %>
        </div>
    </div>
    <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
<!--<script>
    const socket = io(); // Se conecta automáticamente al servidor
    socket.on('tiradaRecibida', (data) => {
    const { username, resultado } = data;
    const container = document.querySelector('.resultado-tirada');
    
    // Actualizar username
    document.getElementById('username').textContent = username;

    // Mostrar último resultado
    const resultadoContenedor = document.getElementById('resultado-dados');
    resultadoContenedor.textContent = resultado.join(', ');
});
</script> -->
    <script src="../public/ficha-render.js"></script>
    <script src="/tiradas.js"></script>
    <script src="/tiradas-master.js"></script>
<script>
document.addEventListener('DOMContentLoaded', () => {
    const imgDefecto = document.getElementById('imagen-por-defecto');
    const modal = document.getElementById('modal-galeria');
    const galeria = document.getElementById('galeria-imagenes');
    const token = localStorage.getItem('token');
    const socket = io();

    // Confirmar conexión
    socket.on('connect', () => console.log('✅ Socket conectado:', socket.id));
    socket.on('connect_error', err => console.error('❌ Error de conexión socket:', err));

    // ESCUCHAR cambios de imagen en tiempo real
    socket.on('imagenPorDefectoActualizada', data => {
        if (!data || !data.nuevaImagen) return;
        console.log('📸 Imagen por defecto actualizada en tiempo real:', data.nuevaImagen);

        const nuevaRuta = data.nuevaImagen + '?t=' + Date.now();
        imgDefecto.src = nuevaRuta;
        imgDefecto.style.transition = 'opacity 0.3s';
        imgDefecto.style.opacity = '0.4';
        setTimeout(() => imgDefecto.style.opacity = '1', 300);
    });

    // --- MODAL DE SELECCIÓN ---
    imgDefecto.addEventListener('click', async () => {
        modal.style.display = 'flex';
        galeria.innerHTML = '';

        const res = await fetch('/getFichas', {
            headers: { 'Authorization': 'Bearer ' + token }
        });
        const fichas = await res.json();

        fichas.forEach(ficha => {
            if (ficha.imagenPersonaje) {
                const img = document.createElement('img');
                img.src = ficha.imagenPersonaje;
                Object.assign(img.style, {
                    width: '100px',
                    height: '100px',
                    borderRadius: '50%',
                    cursor: 'pointer',
                    border: '2px solid #ccc'
                });

                img.addEventListener('mouseover', () => img.style.border = '2px solid #007BFF');
                img.addEventListener('mouseout', () => img.style.border = '2px solid #ccc');

                img.addEventListener('click', async () => {
                    const rutaImagen = ficha.imagenPersonaje.startsWith('/img/')
                        ? ficha.imagenPersonaje
                        : '/img/' + ficha.imagenPersonaje.split('/').pop();

                    imgDefecto.src = rutaImagen;
                    modal.style.display = 'none';

                    console.log('📝 Guardando nueva imagen por defecto:', rutaImagen);
                    const response = await fetch('/actualizar-imagen-por-defecto', {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ nuevaImagen: rutaImagen })
                    });
                    const result = await response.json();
                    console.log('📤 Respuesta del servidor:', result);
                });

                galeria.appendChild(img);
            }
        });
    });

    modal.addEventListener('click', e => {
        if (e.target === modal) modal.style.display = 'none';
    });
});
</script>

</body>
</html>